name: Deploy to AWS Lambda with Docker

on:
    push:
        branches:
            - main

jobs:
    deploy:
        runs-on: ubuntu-latest

        steps:
            # Step 1: Checkout the repository
            - name: Checkout Code
              uses: actions/checkout@v3

            # Step 2: Log in to Amazon ECR
            - name: Log in to Amazon ECR
              env:
                  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
                  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
                  AWS_REGION: ${{ secrets.AWS_REGION }}
              run: |
                  aws ecr get-login-password --region $AWS_REGION | docker login --username AWS --password-stdin 050451396195.dkr.ecr.$AWS_REGION.amazonaws.com

            # Step 3: Create ECR Repository
            - name: Create ECR Repository
              env:
                  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
                  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
                  AWS_REGION: ${{ secrets.AWS_REGION }}
              run: |
                  aws ecr describe-repositories --repository-names connectrix-server --region $AWS_REGION || \
                  aws ecr create-repository --repository-name connectrix-server --region $AWS_REGION

            # Step 4: Build the Docker image
            - name: Build Docker Image
              run: docker build -t connectrix-server .

            # Step 5: Tag the Docker image
            - name: Tag Docker Image
              run: docker tag connectrix-server:latest 050451396195.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/connectrix-server:latest

            # Step 6: Push the Docker image to ECR
            - name: Push to Amazon ECR
              run: docker push 050451396195.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/connectrix-server:latest

            # Step 7: Deploy the Lambda function
            # - name: Deploy to AWS Lambda
            #   env:
            #       AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
            #       AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
            #       AWS_REGION: ${{ secrets.AWS_REGION }}
            #   run: |
            #       aws lambda update-function-code \
            #         --function-name connectrix-server \
            #         --image-uri 050451396195.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/connectrix-server:latest

            - name: Deploy to AWS Lambda
              env:
                  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
                  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
                  AWS_REGION: ${{ secrets.AWS_REGION }}
              run: |
                  # Check if the Lambda function exists
                  if aws lambda get-function --function-name connectrix-server --region $AWS_REGION; then
                      echo "Updating existing Lambda function..."
                      aws lambda update-function-code \
                        --function-name connectrix-server \
                        --image-uri 050451396195.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/connectrix-server:latest
                  else
                          echo "Creating new Lambda function..."
                          aws lambda create-function \
                            --function-name connectrix-server \
                            --package-type Image \
                            --code ImageUri=050451396195.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/connectrix-server:latest \
                            --role arn:aws:iam::050451396195:role/github-oidc-connection \
                            --region $AWS_REGION
                  fi

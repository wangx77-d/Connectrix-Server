name: Deploy to AWS Lambda with Docker

on:
    push:
        branches:
            - main

jobs:
    deploy:
        runs-on: ubuntu-latest

        steps:
            # Step 1: Checkout the repository
            - name: Checkout Code
              uses: actions/checkout@v3

            # Step 2: Log in to Amazon ECR
            - name: Log in to Amazon ECR
              env:
                  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
                  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
                  AWS_REGION: ${{ secrets.AWS_REGION }}
              run: |
                  aws ecr get-login-password --region $AWS_REGION | docker login --username AWS --password-stdin 050451396195.dkr.ecr.$AWS_REGION.amazonaws.com

            # Step 3: Build the Docker image
            - name: Build Docker Image
              run: docker build -t connectrix-server .

            # Step 4: Tag the Docker image
            - name: Tag Docker Image
              run: docker tag connectrix-server:latest 050451396195.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/connectrix-server:latest

            # Step 5: Push the Docker image to ECR
            - name: Push to Amazon ECR
              run: docker push 050451396195.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/connectrix-server:latest

            # Step 6: Deploy the Lambda function
            - name: Deploy to AWS Lambda
              env:
                  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
                  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
                  AWS_REGION: ${{ secrets.AWS_REGION }}
              run: |
                  aws lambda update-function-code \
                    --function-name connectrix-server \
                    --image-uri 050451396195.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/connectrix-server:latest
